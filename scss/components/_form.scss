.form {
    flex: 0 1 73%;
    max-width: 100%;

    @include respond(phone) {
        flex: 0 1 100%;
    }


    &__group {
        display: flex;

        @include respond(phone) {
            display: block;
        }
    }

    &__items {
        display: flex;
        flex-direction: column;
        width: 100%;

        &:not(:last-child) {
            margin-bottom: 2.1rem;
            margin-right: 3rem;
        }

        @include respond(phone) {
            margin-bottom: 1rem;

            &:not(:last-child) {
                margin-bottom: 1rem;
                margin-right: 0rem;
            }
        }
    }

    &__input {
        height: 4.4rem;
        font-family: inherit;
        border: 1px solid $color-black;
        font-size: 1.6rem;

        @include respond(phone) {
            height: 6.4rem;
        }


        &::placeholder {
            font-size: 1.2rem;
            line-height: 2rem;
            text-transform: uppercase;
            padding: 1.7rem;
            color: $color-davy-gray;
        }

        &:focus {
            outline: none;
            box-shadow: 0 1rem 1.5rem rgba($color-black, 0.3);
            border: 2px solid $color-light-green;
            background-color: rgba($color-silver, 0.2);
        }

        &:focus:invalid {
            border: 1px solid $color-light-orange;
        }
    }

    &__label {
        display: block;
        font-size: 1rem;
        font-weight: 700;
        margin-top: 1rem;
        margin-left: 2rem;
        color: $color-davy-gray;
        transition: all .5s;
    }

    &__input:placeholder-shown + &__label { // == this adjacent siblings(соседний селектор - label is a adjacent sibling of input)where adjacent sibling(lable) has to be right after (input) (in HTML markup first  - input and than label) not the oposite (when first label than input)  selector allows us style label not an input (we want label to hidden)
        opacity: 0;
        visibility: hidden; //visibility in pair with opacity: 0 allows us to animate this effect
        transform: translateY(-4rem);
    }

    &__comment {
        &:not(:last-child) {
            margin-bottom: 2.1rem;

            @include respond(tiny-phone) {
                margin-bottom: 0rem;
            }
        }

        textarea {
            width: 100%;
            height: 10.5rem;
            font-family: inherit;
            border: 1px solid $color-black;

            @include respond(phone) {
                height: 12.4rem;
            }


            &::placeholder {
                font-size: 1.2rem;
                line-height: 2rem;
                text-transform: uppercase;
                padding: 1.7rem;
                color: $color-davy-gray;
            }

            &:focus {
                outline: none;
                box-shadow: 0 1rem 1.5rem rgba($color-black, 0.3);
                border: 2px solid $color-light-green;
                background-color: rgba($color-silver, 0.2);
            }

            &:focus:invalid {
                border: 2px solid $color-light-orange;
            }
        }

        textarea:placeholder-shown + label {
            opacity: 0;
            visibility: hidden; //visibility in pair with opacity: 0 allows us to animate this effect
            transform: translateY(-4rem);
        }
    }

    &__click {
        display: flex;
        align-items: center;

        @include respond(phone) {
            flex-direction: column-reverse;
        }
    }

    &__notification {
        font-size: 1.2rem;
        line-height: 2rem;
        color: $color-davy-gray;

        &::before {
            content: "*";
            color: $color-light-red;
            margin-right: .3rem;
        }

        @include respond(phone) {
            margin-bottom: 1.3rem;
        }
    }
}
